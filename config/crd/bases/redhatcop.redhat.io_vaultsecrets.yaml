
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: vaultsecrets.redhatcop.redhat.io
spec:
  group: redhatcop.redhat.io
  names:
    kind: VaultSecret
    listKind: VaultSecretList
    plural: vaultsecrets
    singular: vaultsecret
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VaultSecret is the Schema for the vaultsecrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VaultSecretSpec defines the desired state of VaultSecret
            properties:
              output:
                description: TemplatizedK8sSecret is the formatted K8s Secret created
                  by templating from the Vault KV secrets.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations are annotations to add to the final K8s
                      Secret.
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels are labels to add to the final K8s Secret.
                    type: object
                  name:
                    description: Name is the K8s Secret name to output to.
                    type: string
                  stringData:
                    additionalProperties:
                      type: string
                    description: StringData is the K8s Secret stringData and allows
                      specifying non-binary secret data in string form with go templating
                      support to transform the Vault KV secrets into a formatted K8s
                      Secret. The Sprig template library and Helm functions (like
                      toYaml) are supported.
                    type: object
                  type:
                    description: Type is the K8s Secret type to output to.
                    type: string
                type: object
              refreshPeriod:
                description: RefreshPeriod if specified, the operator will refresh
                  the secret with the given frequency. This takes precedence over
                  any vault secret lease duration and can be used to force a refresh.
                type: string
              refreshThreshold:
                default: 90
                description: RefreshThreshold if specified, will instruct the operator
                  to refresh when a percentage of the lease duration is met when there
                  is no RefreshPeriod specified. This is particularly useful for controlling
                  when dynamic secrets should be refreshed before the lease duration
                  is exceeded. The default is 90, meaning the secret would refresh
                  after 90% of the time has passed from the vault secret's lease duration.
                type: integer
              vaultSecretDefinitions:
                description: VaultSecretDefinitions are the secrets in Vault.
                items:
                  properties:
                    authentication:
                      description: Authentication is the kube auth configuraiton to
                        be used to execute this request
                      properties:
                        namespace:
                          description: Namespace is the Vault namespace to be used
                            in all the operations withing this connection/authentication.
                            Only available in Vault Enterprise.
                          type: string
                        path:
                          default: kubernetes
                          description: Path is the path of the role used for this
                            kube auth authentication. The operator will try to authenticate
                            at {[namespace/]}auth/{spec.path}
                          pattern: ^(?:/?[\w;:@&=\$-\.\+]*)+/?
                          type: string
                        role:
                          description: Role the role to be used during authentication
                          type: string
                        serviceAccount:
                          default:
                            name: default
                          description: ServiceAccount is the service account used
                            for the kube auth authentication
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      type: object
                    name:
                      description: Name is an arbitrary, but unique, name for this
                        KV Vault secret and referenced when templating.
                      type: string
                    path:
                      default: kubernetes
                      description: Path is the path of the secret.
                      pattern: ^(?:/?[\w;:@&=\$-\.\+]*)+/?
                      type: string
                    requestPayload:
                      additionalProperties:
                        type: string
                      description: RequestPayload for POST type of requests, this
                        field contains the payload of the request. Not used for GET
                        requests.
                      type: object
                    requestType:
                      default: GET
                      description: RequestType the type of request needed to retrieve
                        a secret. Normally a GET, but some secret engnes require a
                        POST.
                      enum:
                      - GET
                      - POST
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: VaultSecretStatus defines the observed state of VaultSecret
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              lastVaultSecretUpdate:
                description: LastVaultSecretUpdate the last time when this secret
                  was updated from Vault
                format: date-time
                type: string
              nextVaultSecretUpdate:
                description: NextVaultSecretUpdate the next time when this secret
                  will be synced with Vault. If nil, it will not be refreshed.
                format: date-time
                type: string
              vaultSecretDefinitionsStatus:
                description: VaultSecretDefinitionsStatus information used to determine
                  if the secret should be rereconciled
                items:
                  properties:
                    lease_duration:
                      description: LeaseDuration is the time until the secret should
                        be read in again, thus recreating the k8s Secret
                      type: integer
                    lease_id:
                      description: LeaseID is the id of a lease, this denotes the
                        secret is dynamic
                      type: string
                    name:
                      description: Name is an arbitrary, but unique, name for this
                        KV Vault secret and referenced when templating.
                      type: string
                    renewable:
                      description: Renewable informs if the lease is renewable for
                        the dynamic secret
                      type: boolean
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
